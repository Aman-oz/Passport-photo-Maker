kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: E:/AmanUllah/Passport-photo-Maker/image-picker/src/main/java/com/ots/image_picker/AssetRoute.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN LOCAL_FUNCTION_FOR_LAMBDA name:AssetPickerRoute$lambda$21$lambda$20 visibility:private modality:FINAL <> ($viewModel:com.ots.image_picker.viewmodel.AssetViewModel, $navController:androidx.navigation.NavHostController, $this$composable:androidx.compose.animation.AnimatedContentScope, it:androidx.navigation.NavBackStackEntry) returnType:kotlin.Unit?
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$viewModel index:0 type:com.ots.image_picker.viewmodel.AssetViewModel
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$navController index:1 type:androidx.navigation.NavHostController
  VALUE_PARAMETER name:$this$composable index:2 type:androidx.compose.animation.AnimatedContentScope
  VALUE_PARAMETER name:it index:3 type:androidx.navigation.NavBackStackEntry
  BLOCK_BODY
    VAR name:arguments type:android.os.Bundle [val]
      CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=android.os.Bundle origin=EXCLEXCL
        <T0>: android.os.Bundle
        arg0: CALL 'public final fun <get-arguments> (): android.os.Bundle? declared in androidx.navigation.NavBackStackEntry' type=android.os.Bundle? origin=GET_PROPERTY
          $this: GET_VAR 'it: androidx.navigation.NavBackStackEntry declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.navigation.NavBackStackEntry origin=null
    VAR name:requestType type:kotlin.String? [val]
      CALL 'public open fun getString (p0: @[EnhancedNullability] kotlin.String?): @[EnhancedNullability] kotlin.String? [fake_override] declared in android.os.Bundle' type=@[EnhancedNullability] kotlin.String? origin=null
        $this: GET_VAR 'val arguments: android.os.Bundle [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=android.os.Bundle origin=null
        p0: CONST String type=kotlin.String value="requestType"
    VAR name:assets type:kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val]
      CALL 'public final fun getGroupedAssets (requestType: com.ots.image_picker.model.RequestType): kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> declared in com.ots.image_picker.viewmodel.AssetViewModel' type=kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
        $this: GET_VAR '$viewModel: com.ots.image_picker.viewmodel.AssetViewModel declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=com.ots.image_picker.viewmodel.AssetViewModel origin=null
        requestType: CALL 'public final fun valueOf (value: kotlin.String): com.ots.image_picker.model.RequestType declared in com.ots.image_picker.model.RequestType' type=com.ots.image_picker.model.RequestType origin=null
          value: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.String origin=EXCLEXCL
            <T0>: kotlin.String
            arg0: GET_VAR 'val requestType: kotlin.String? [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=kotlin.String? origin=null
    VAR PROPERTY_DELEGATE name:dateString$delegate type:androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> origin=null
        <T>: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$9 ($arguments: android.os.Bundle): androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>> origin=INLINE_LAMBDA reflectionTarget=null
            $arguments: GET_VAR 'val arguments: android.os.Bundle [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=android.os.Bundle origin=null
    VAR PROPERTY_DELEGATE name:index$delegate type:androidx.compose.runtime.MutableIntState [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableIntState origin=null
        <T>: androidx.compose.runtime.MutableIntState
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableIntState> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$12 ($arguments: android.os.Bundle): androidx.compose.runtime.MutableIntState declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Function0<androidx.compose.runtime.MutableIntState> origin=INLINE_LAMBDA reflectionTarget=null
            $arguments: GET_VAR 'val arguments: android.os.Bundle [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=android.os.Bundle origin=null
    VAR PROPERTY_DELEGATE name:assetList$delegate type:androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$15 ($assets: kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>, $dateString$delegate: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>): androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>> origin=INLINE_LAMBDA reflectionTarget=null
            $assets: GET_VAR 'val assets: kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
            $dateString$delegate: GET_VAR 'val dateString$delegate: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> origin=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp0_index type:kotlin.Int [val]
        CALL 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$13 ($index$delegate: androidx.compose.runtime.MutableIntState): kotlin.Int declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Int origin=GET_LOCAL_PROPERTY
          $index$delegate: GET_VAR 'val index$delegate: androidx.compose.runtime.MutableIntState [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableIntState origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp1_assets type:kotlin.collections.List<com.ots.image_picker.model.AssetInfo> [val]
        CALL 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$16 ($assetList$delegate: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>): kotlin.collections.List<com.ots.image_picker.model.AssetInfo> declared in com.ots.image_picker.AssetRouteKt' type=kotlin.collections.List<com.ots.image_picker.model.AssetInfo> origin=GET_LOCAL_PROPERTY
          $assetList$delegate: GET_VAR 'val assetList$delegate: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp2_selectedList type:androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo> [val]
        CALL 'public final fun <get-selectedList> (): androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo> declared in com.ots.image_picker.viewmodel.AssetViewModel' type=androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo> origin=GET_PROPERTY
          $this: GET_VAR '$viewModel: com.ots.image_picker.viewmodel.AssetViewModel declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=com.ots.image_picker.viewmodel.AssetViewModel origin=null
      CALL 'public final fun AssetPreviewScreen (index: kotlin.Int, assets: kotlin.collections.List<com.ots.image_picker.model.AssetInfo>, navigateUp: kotlin.Function0<kotlin.Unit>, selectedList: androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo>, onSelectChanged: kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit>): kotlin.Unit declared in com.ots.image_picker.view.AssetPreviewScreenKt' type=kotlin.Unit origin=null
        index: GET_VAR 'val tmp0_index: kotlin.Int [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=kotlin.Int origin=null
        assets: GET_VAR 'val tmp1_assets: kotlin.collections.List<com.ots.image_picker.model.AssetInfo> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=kotlin.collections.List<com.ots.image_picker.model.AssetInfo> origin=null
        navigateUp: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
            <T>: kotlin.Function0<kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.navigation.NavHostController): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
              p0: GET_VAR '$navController: androidx.navigation.NavHostController declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.navigation.NavHostController origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$18 ($navController: androidx.navigation.NavHostController): kotlin.Unit? declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        selectedList: GET_VAR 'val tmp2_selectedList: androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.snapshots.SnapshotStateList<com.ots.image_picker.model.AssetInfo> origin=null
        onSelectChanged: BLOCK type=kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit> origin=null
            <T>: kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>, p1: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>, p2: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>, p3: androidx.compose.runtime.MutableIntState): kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<com.ots.image_picker.model.AssetInfo, kotlin.Unit> origin=null
              p0: GET_VAR 'val assets: kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
              p1: GET_VAR 'val dateString$delegate: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> origin=null
              p2: GET_VAR 'val assetList$delegate: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>> origin=null
              p3: GET_VAR 'val index$delegate: androidx.compose.runtime.MutableIntState [val] declared in com.ots.image_picker.AssetRouteKt.AssetPickerRoute$lambda$21$lambda$20' type=androidx.compose.runtime.MutableIntState origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun AssetPickerRoute$lambda$21$lambda$20$lambda$19 ($assets: kotlin.collections.Map<kotlin.String, kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>, $dateString$delegate: androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?>, $assetList$delegate: androidx.compose.runtime.MutableState<kotlin.collections.List<com.ots.image_picker.model.AssetInfo>>, $index$delegate: androidx.compose.runtime.MutableIntState, assetInfo: com.ots.image_picker.model.AssetInfo): kotlin.Unit? declared in com.ots.image_picker.AssetRouteKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: com.ots.image_picker.model.AssetInfo): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<@[EnhancedNullability] kotlin.String?> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


